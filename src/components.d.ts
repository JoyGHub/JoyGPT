/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface JoygptIntro {
    }
    interface JoygptMain {
        "scrollToBottom": () => Promise<void>;
    }
}
export interface JoygptIntroCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLJoygptIntroElement;
}
declare global {
    interface HTMLJoygptIntroElementEventMap {
        "promptEvent": string;
    }
    interface HTMLJoygptIntroElement extends Components.JoygptIntro, HTMLStencilElement {
        addEventListener<K extends keyof HTMLJoygptIntroElementEventMap>(type: K, listener: (this: HTMLJoygptIntroElement, ev: JoygptIntroCustomEvent<HTMLJoygptIntroElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLJoygptIntroElementEventMap>(type: K, listener: (this: HTMLJoygptIntroElement, ev: JoygptIntroCustomEvent<HTMLJoygptIntroElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLJoygptIntroElement: {
        prototype: HTMLJoygptIntroElement;
        new (): HTMLJoygptIntroElement;
    };
    interface HTMLJoygptMainElement extends Components.JoygptMain, HTMLStencilElement {
    }
    var HTMLJoygptMainElement: {
        prototype: HTMLJoygptMainElement;
        new (): HTMLJoygptMainElement;
    };
    interface HTMLElementTagNameMap {
        "joygpt-intro": HTMLJoygptIntroElement;
        "joygpt-main": HTMLJoygptMainElement;
    }
}
declare namespace LocalJSX {
    interface JoygptIntro {
        "onPromptEvent"?: (event: JoygptIntroCustomEvent<string>) => void;
    }
    interface JoygptMain {
    }
    interface IntrinsicElements {
        "joygpt-intro": JoygptIntro;
        "joygpt-main": JoygptMain;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "joygpt-intro": LocalJSX.JoygptIntro & JSXBase.HTMLAttributes<HTMLJoygptIntroElement>;
            "joygpt-main": LocalJSX.JoygptMain & JSXBase.HTMLAttributes<HTMLJoygptMainElement>;
        }
    }
}
